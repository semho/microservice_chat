name: Deploy Workflow

on:
  workflow_run:
    workflows: ["Go Tests"]
    types:
      - completed
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  REGISTRY: ${{ secrets.REGISTRY }}
  IMAGE_NAME_1: "auth"
  IMAGE_NAME_2: "chat-server"
  CONTAINER_NAME_1: "auth-prod"
  CONTAINER_NAME_2: "chat-server-prod"
  RUNNER_DIR: "/home/runner/work/microservice_chat/microservice_chat"
jobs:
  create_artifact:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout files
        uses: actions/checkout@v3
      - name: upload artifact docker-compose
        uses: actions/upload-artifact@v4
        with:
          name: docker_compose
          path: prod.docker-compose.yaml
          retention-days: 1
          if-no-files-found: error
          overwrite: true
      - name: upload artifact migration Dockerfile
        uses: actions/upload-artifact@v4
        with:
          name: dockerfile
          path: migration_prod.Dockerfile
          retention-days: 1
          if-no-files-found: error
          overwrite: true
      - name: upload artifact migration_prod.sh
        uses: actions/upload-artifact@v4
        with:
          name: migration
          path: migration_prod.sh
          retention-days: 1
          if-no-files-found: error
          overwrite: true

  build-and-push:
    runs-on: ubuntu-latest
    needs: create_artifact
    steps:
      - name: Checkout master
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Registry
        run: docker login -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }} $REGISTRY

      - name: Build and Push Docker Image 1
        run: |
          TAG_NAME_1=$(echo $GITHUB_SHA | head -c7)
          docker buildx create --use
          docker buildx build --no-cache --push --tag $REGISTRY/$IMAGE_NAME_1:$TAG_NAME_1 -f auth.Dockerfile .

      - name: Build and Push Docker Image 2
        run: |
          TAG_NAME_2=$(echo $GITHUB_SHA | head -c7)
          docker buildx create --use
          docker buildx build --no-cache --push --tag $REGISTRY/$IMAGE_NAME_2:$TAG_NAME_2 -f chat-server.Dockerfile .

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Set error handling
        run: set -e
      - name: Docker Login
        run: docker login -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }} $REGISTRY
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
      - name: List RUNNER_DIR
        run: ls -la $RUNNER_DIR
      - name: Check if docker-compose.yml exists
        run: |
          ls -la "$RUNNER_DIR/docker_compose/"
          if [ ! -f $RUNNER_DIR/docker_compose/prod.docker-compose.yaml ]; then
            echo "Ошибка: Файл docker_compose/prod.docker-compose.yaml не найден в скачанных артефактах!"
            exit 1
          fi
      - name: Deploy to Selectel Cloud via SSH action
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          envs: IMAGE_NAME_1, IMAGE_NAME_2, CONTAINER_NAME_1, CONTAINER_NAME_2, REGISTRY, GITHUB_SHA
          script: |
            cd $RUNNER_DIR/docker-compose/
            ls -la
            scp prod.docker-compose.yml ${{ secrets.SSH_USERNAME }}@${{ secrets.SERVER_HOST }}:
